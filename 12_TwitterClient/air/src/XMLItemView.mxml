<?xml version="1.0" encoding="utf-8"?>
<mx:HBox xmlns:mx="http://www.adobe.com/2006/mxml" 
	backgroundColor="0x999999"
	backgroundAlpha="{(app().roamer.dataProvider as Graph).numLinks(data as Item) > 1 ? 1.0 : 0.3}"
	click="app().itemClick(event);"
	filters="{calcFilters(app().roamer.currentItem, data as Item)}"
>	
	<mx:states>
		<mx:State name="cached"/>
	</mx:states>
	
	<!-- XMLItemView.mxml is the item renderer component for one XML item. 
		 We simply display the 'name' attribute of the XML item in a colored box. -->
				
	<mx:Text fontSize="13" text="{data.data.name}" color="#ffffff" width="65" selectable="false"/>
	<mx:Image source="{data.data.profile_image_url}"/>

	<mx:Script>
		<![CDATA[
			import mx.controls.Alert;
			import mx.effects.Glow;
			import com.adobe.flex.extras.controls.springgraph.Graph;
			import com.adobe.flex.extras.controls.springgraph.Item;
			import mx.core.Application;
			
			public function doubleClick(event: Event): void {
				app().itemDoubleClick(event);
			}
			
			private function app(): Object {
				return Application.application;
			}
			
			/* This function gets called whenever the graph's current item changes,
			 * or when our data changes, to calculate the borderthickness.
			 */
			private function calcFilters(currentItem: Item, item: Item): Array {
				if(app().roamer.currentItem == item) {
					return [new GlowFilter(0xFFFF00, 0.5, 8, 8, 2, 1)];
				} else if(app().roamer.hasBeenCurrentItem(item)) {
					return [new GlowFilter(0x0000FF, 0.3, 6, 6, 2, 1)];
				} else {
					return null;
				}
			}
			
		]]>
	</mx:Script>				
</mx:HBox>
				